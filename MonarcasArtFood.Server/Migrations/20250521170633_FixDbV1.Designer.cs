// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonarcasArtFood.Server.Data;

#nullable disable

namespace MonarcasArtFood.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521170633_FixDbV1")]
    partial class FixDbV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Hamburguesas"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Perros"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Salchipapas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Adicionales"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Bebidas"
                        });
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.DetallePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descripcion = "Pan Brioche, Carne Mixta(Res y Cerdo), Queso Amarillo, Lechuga, Tomate, Cebolla caramelizada, Tocineta, Salsas de la casa, Acompañantes: Papas a la francesa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/hamburguesa_sencilla.jpg",
                            Nombre = "Hamburguesa Sencilla",
                            Precio = 16000m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Descripcion = "Pan Brioche, Carne de Costilla Desmechada en salsa BBQ, Queso Amarillo, Lechuga, Tomate, Cebolla caramelizada, Maicitos, Tocineta, Salsas de la casa, Acompañantes: Papas a la francesa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/hamburguesa_desmechada.jpg",
                            Nombre = "Hamburguesa Desmechada",
                            Precio = 18000m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Descripcion = "Pan Brioche, Carne Mixta(Res y Cerdo), Carne de Costilla Desmechada en salsa BBQ, Queso Amarillo, Lechuga, Tomate, Cebolla caramelizada, Maicitos, Tocineta, Salsas de la casa, Acompañantes: Papas a la francesa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/hamburguesa_mixta.jpg",
                            Nombre = "Hamburguesa Mixta",
                            Precio = 20000m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            Descripcion = "Pan Brioche, Carne Mixta(Res y Cerdo) X2, Queso Amarillo X2, Lechuga, Tomate, Cebolla caramelizada, Tocineta, Salsas de la casa, Acompañantes: Papas a la francesa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/hamburguesa_doble.jpg",
                            Nombre = "Hamburguesa Doble Carne",
                            Precio = 22000m
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 2,
                            Descripcion = "Pan Brioche, Salchicha Americana, Tocineta, Queso Mozzarella, Trocitos de Piña caramelizada, Cebolla Crsipy, Salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/perro_americano.jpg",
                            Nombre = "Perro Americano",
                            Precio = 11500m
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            Descripcion = "Pan Brioche, Salchicha Americana, Carne de Costilla Desmechada en salsa BBQ, Tocineta, Queso Mozzarella, Maicitos, Cebolla Crsipy, Salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/perro_desmechado.jpg",
                            Nombre = "Perro Desmechado",
                            Precio = 14500m
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 3,
                            Descripcion = "250 GR De papas a la francesa, Salchicha caramelizada, Costilla desmechada en salsa BBQ, Maicitos, Cebolla Crispy, Salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/salchi_pequeña.jpg",
                            Nombre = "Salchipapa Pequeña",
                            Precio = 16000m
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 3,
                            Descripcion = "400 GR De papas a la francesa, Salchicha caramelizada, Costilla desmechada en salsa BBQ, Maicitos, Cebolla Crispy, Salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/salchi_grande.jpg",
                            Nombre = "Salchipapa Grande",
                            Precio = 22000m
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 3,
                            Descripcion = "Carne de hamburguesa fileteada, 450 GR De papas a la francesa, Salchicha caramelizada, Costilla desmechada en salsa BBQ, Maicitos, Cebolla Crispy, Tocineta, Salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/salchi_burguer.jpg",
                            Nombre = "SalchiBurguer",
                            Precio = 27000m
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 4,
                            Descripcion = "Queso mozzarella gratinado , puedes pedirlo en todos nuestro productos (La adicion es equivalente a 1 loncha)",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/queso_gratinado.jpg",
                            Nombre = "Queso Gratinado",
                            Precio = 1000m
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 4,
                            Descripcion = "200 GR Acompañadas de las salsas de la casa",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/porcion_papas.jpg",
                            Nombre = "Porcion de Papas a la Francesa",
                            Precio = 4000m
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 4,
                            Descripcion = "200 GR de papas a la francesa acompañadas de salsa de queso de la casa , queso cheddar, queso mozzarella y tocineta",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/papas_qyt.jpg",
                            Nombre = "Porcion de Papas con Queso y Tocineta",
                            Precio = 9000m
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 5,
                            Descripcion = "Tropical, Lulo, Mango, Mora, Piña-Naranja",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/jugos_hit.jpg",
                            Nombre = "Jugos Hit",
                            Precio = 4000m
                        },
                        new
                        {
                            Id = 14,
                            CategoriaId = 5,
                            Descripcion = "Pepsi, Manzana, Uva, Naranja",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/productos_postobon.jpg",
                            Nombre = "Productos Postobon",
                            Precio = 4000m
                        },
                        new
                        {
                            Id = 15,
                            CategoriaId = 5,
                            Descripcion = "Coca-Cola, Sprite, Quatro",
                            Disponible = true,
                            ImagenUrl = "/Imagenes/productos_cocacola.jpg",
                            Nombre = "Productos Coca-Cola",
                            Precio = 4000m
                        });
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecioPromocional")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Promociones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "15% en los Perros todos los lunes.",
                            Fecha = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            PrecioPromocional = 10000m,
                            Titulo = "Miercoles de Perros"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "15% en los Perros todos los miercoles.",
                            Fecha = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            PrecioPromocional = 13000m,
                            Titulo = "Miercoles de Perros"
                        });
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsRecogerEnLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProductoPromocion", b =>
                {
                    b.Property<int>("ProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PromocionesId")
                        .HasColumnType("int");

                    b.HasKey("ProductosId", "PromocionesId");

                    b.HasIndex("PromocionesId");

                    b.ToTable("ProductoPromocion");

                    b.HasData(
                        new
                        {
                            ProductosId = 5,
                            PromocionesId = 1
                        },
                        new
                        {
                            ProductosId = 6,
                            PromocionesId = 2
                        });
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.DetallePedido", b =>
                {
                    b.HasOne("MonarcasArtFood.Server.Models.Pedido", "Pedido")
                        .WithMany("Detalles")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonarcasArtFood.Server.Models.Producto", "Producto")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Pedido", b =>
                {
                    b.HasOne("MonarcasArtFood.Server.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Producto", b =>
                {
                    b.HasOne("MonarcasArtFood.Server.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProductoPromocion", b =>
                {
                    b.HasOne("MonarcasArtFood.Server.Models.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonarcasArtFood.Server.Models.Promocion", null)
                        .WithMany()
                        .HasForeignKey("PromocionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Pedido", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Producto", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("MonarcasArtFood.Server.Models.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
